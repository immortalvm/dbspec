plugins {
    id("application")
    id("de.undercouch.download") version "5.6.0"
}

group = "no.nr"
version = "1.2.1"

java {
    sourceCompatibility = "11"
    targetCompatibility = "11"
}

repositories {
    mavenCentral().content {
        // https://stackoverflow.com/a/68564179
        excludeModule("javax.media", "jai_core")
    }
    maven {
        name = "ImmortalVM"
        url = uri("https://maven.pkg.github.com/immortalvm/tree-sitter-ng-dbspec")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    flatDir{
        dirs("libs")
    }
}

tasks.register("download_siardcmd.zip", Download) {
    // outputs.file("download/siardcmd.zip")
    src("https://github.com/sfa-siard/SiardCmd/releases/download/2.2.1/siardcmd.zip")
    dest {
        File dir = file("download")
        dir.mkdirs()
        dir
    }
    onlyIfModified(true)
    overwrite(true)
}

tasks.register("extract_siardcmd.zip", Copy) {
    dependsOn("download_siardcmd.zip")
    from(zipTree("download/siardcmd.zip")) {
        include("siardcmd/siardcmd-2.2.1.zip")
        eachFile { fcd ->
            //noinspection GroovyAccessibility
            fcd.relativePath = new RelativePath(true, fcd.relativePath.segments.drop(1))
        }
        includeEmptyDirs = false
    }
    into("download")
}

tasks.register("extract_siardcmd-2.2.1-libs", Copy) {
    dependsOn("extract_siardcmd.zip")
    from(zipTree("download/siardcmd-2.2.1.zip")) {
        include("siardcmd/lib/**")
        eachFile { fcd ->
            //noinspection GroovyAccessibility
            fcd.relativePath = new RelativePath(true, fcd.relativePath.segments.drop(2))
        }
        includeEmptyDirs = false
    }
    into("libs")
}

compileJava.dependsOn("extract_siardcmd-2.2.1-libs")

tasks.register("extract_siardcmd-2.2.1-etc", Copy) {
    dependsOn("extract_siardcmd.zip")
    from(zipTree("download/siardcmd-2.2.1.zip")) {
        include("siardcmd/etc/**")
    }
    into("build")
}

compileJava.dependsOn("extract_siardcmd-2.2.1-etc")

dependencies {
    implementation("io.github.bonede:tree-sitter:0.22.6.1")
    implementation("no.nr:tree-sitter-ng-dbspec:1.0")

    implementation("commons-cli:commons-cli:1.7.0")
    implementation("org.apache.commons:commons-text:1.12.0")

    // From libs:
    implementation(fileTree(dir: "libs", include: "*.jar"))

    testImplementation(platform("org.junit:junit-bom:5.10.2"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation("com.h2database:h2:2.2.224")
    testImplementation("org.json:json:20240303")

    // https://stackoverflow.com/a/77605392
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

application {
    mainClass = "no.nr.dbspec.Main"
    applicationDefaultJvmArgs = [
        "-Dfile.encoding=UTF-8"
    ]
    applicationDistribution.from("build/siardcmd/etc") {
        into("etc")
    }
}

// Skip dbspec-<version> top level directory
distributions {
    main {
        contents {
            into("/")
        }
    }
}

run {
    classpath += files("build/siardcmd")
}

test {
    useJUnitPlatform()
}
